plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.moddev' version '1.0.11'
}

version = mod_version
group = mod_group



base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

neoForge {

    version = project.neoforge_version
    validateAccessTransformers = true

    runs {
        configureEach {
            logLevel = org.slf4j.event.Level.INFO
        }
        client {
            client()
        }
        data {
            programArguments.addAll (
                    '--mod', project.mod_id,
                    '--all',
                    '--output', file('src/generated/resources/').getAbsolutePath(),
                    '--existing', file('src/main/resources/').getAbsolutePath()
            )
            data()
        }
        server {
            server()
        }
    }

    mods {
        mod_id {
            sourceSet sourceSets.main
        }
    }

    parchment {
        minecraftVersion = minecraft_version
        mappingsVersion = parchment_version
    }

}



sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenLocal()
    maven { // JEI
        url "https://maven.blamejared.com"
    }
    maven { // TOP
        url "https://maven.k-4u.nl"
    }
}

dependencies {

    //compileOnly "mezz.jei:jei-${minecraft_version}-common-api:${jei_version_common}"
    //compileOnly "mezz.jei:jei-${minecraft_version}-neoforge-api:${jei_version_neoforge}"
    //runtimeOnly "mezz.jei:jei-${minecraft_version}-neoforge:${jei_version_neoforge}"

    //implementation "mcjty.theoneprobe:theoneprobe:${top_version}"
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version: minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neoforge_version: neoforge_version,
            neoforge_version_range: neoforge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id,
            mod_name: mod_name,
            mod_license: mod_license,
            mod_version: mod_version,
            mod_authors: mod_authors,
            mod_credits: mod_credits,
            mod_description: mod_description,
            mod_icon: mod_icon,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties + [project: project]
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : mod_id,
                "Specification-Vendor"    : mod_authors,
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : mod_authors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}